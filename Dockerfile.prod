# Production Dockerfile for Next.js App
FROM node:18-alpine AS deps
WORKDIR /app

# Install Yarn
RUN npm install -g yarn

# Install dependencies
COPY package.json yarn.lock* ./
RUN yarn install --frozen-lockfile --production

# Rebuild the source code only when needed
FROM node:18-alpine AS builder
WORKDIR /app

# Install Yarn
RUN npm install -g yarn

COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the application
RUN yarn build

# Production image, copy all the files and run next
FROM node:18-alpine AS runner
WORKDIR /app

ENV NODE_ENV production

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Change ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3000

ENV PORT 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start the application
CMD ["node", "server.js"]