version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: medibot-postgres
    environment:
      POSTGRES_DB: medibot
      POSTGRES_USER: medibot_user
      POSTGRES_PASSWORD: medibot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - medibot-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: medibot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medibot-network

  # LiveKit Server
  livekit:
    image: livekit/livekit-server:latest
    container_name: medibot-livekit
    command: ["--dev"]
    ports:
      - "7880:7880"   # HTTP/WS API and signaling
      - "7881:7881/udp" # WebRTC media (UDP)
    networks:
      - medibot-network

  # Next.js Application (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: medibot-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://medibot_user:medibot_password@postgres:5432/medibot
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - AI_SERVICE_API_KEY=your-ai-service-api-key
      - NEXTAUTH_SECRET=your-nextauth-secret-key
      - NEXTAUTH_URL=http://localhost:3000
      - NEXT_PUBLIC_LIVEKIT_URL=ws://livekit:7880
      - LIVEKIT_API_KEY=devkey
      - LIVEKIT_API_SECRET=secret
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
      - livekit
    networks:
      - medibot-network

volumes:
  postgres_data:
  redis_data:

networks:
  medibot-network:
    driver: bridge